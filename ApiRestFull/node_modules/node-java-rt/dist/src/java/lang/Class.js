"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Object_1 = __importDefault(require("./Object"));
const Method_1 = __importDefault(require("./reflect/Method"));
const java_1 = require("../java");
class Class extends Object_1.default /*TODO:  implements java.io.Serializable,GenericDeclaration,Type,AnnotatedElement*/ {
    getMethods() {
        const javaObject = this._java.getMethodsSync();
        // return toJsArray<Method>(javaObject, javaObject => Class._buildSyncOrThrow(javaObject, new Method()))
        return Class._buildArraySync(javaObject, () => new Method_1.default());
    }
    /**
     * Easy way to instantiate objects of a class, instead of having to use node-java directly, eg:
     *
     * ```js
     * const obj = Class
     * ```
     */
    static new(className, instance, ...args) {
        const java = java_1.getJava();
        const obj = java.newInstanceSync.apply(java, [className, ...args]);
        instance = typeof instance === 'function' ? instance() : instance;
        return Class._buildSyncOrThrow(obj, instance);
    }
}
exports.default = Class;
//# sourceMappingURL=Class.js.map