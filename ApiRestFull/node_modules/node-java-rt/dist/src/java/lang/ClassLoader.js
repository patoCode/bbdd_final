"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Object_1 = __importDefault(require("./Object"));
const java_1 = require("../java");
class ClassLoader extends Object_1.default {
    static getSystemClassLoader() {
        const obj = java_1.getJava().callStaticMethodSync('java.lang.ClassLoader', 'getSystemClassLoader');
        return ClassLoader._buildSyncOrThrow(obj, new ClassLoader());
    }
    loadClass(className) {
        const Class_ = require('./Class').default; // TODO: workaround - if not ts error: "TypeError: Class extends value undefined is not a constructor or null" because of circular dependency import issue
        return ClassLoader._buildSyncOrThrow(this._java.loadClassSync(className), new Class_());
    }
}
exports.default = ClassLoader;
//# sourceMappingURL=ClassLoader.js.map