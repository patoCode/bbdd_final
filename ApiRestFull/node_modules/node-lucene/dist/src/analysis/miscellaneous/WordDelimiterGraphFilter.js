"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const getLuceneJava_1 = require("../../util/getLuceneJava");
const TokenFilter_1 = __importDefault(require("../TokenFilter"));
class WordDelimiterGraphFilter extends TokenFilter_1.default {
    static get CATENATE_ALL() {
        return getLuceneJava_1.getLuceneJava().getStaticFieldValue('org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilter', 'CATENATE_ALL');
    }
    static get CATENATE_NUMBERS() {
        return getLuceneJava_1.getLuceneJava().getStaticFieldValue('org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilter', 'CATENATE_NUMBERS');
    }
    static get CATENATE_WORDS() {
        return getLuceneJava_1.getLuceneJava().getStaticFieldValue('org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilter', 'CATENATE_WORDS');
    }
    static get GENERATE_NUMBER_PARTS() {
        return getLuceneJava_1.getLuceneJava().getStaticFieldValue('org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilter', 'GENERATE_NUMBER_PARTS');
    }
    static get GENERATE_WORD_PARTS() {
        return getLuceneJava_1.getLuceneJava().getStaticFieldValue('org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilter', 'GENERATE_WORD_PARTS');
    }
    static get IGNORE_KEYWORDS() {
        return getLuceneJava_1.getLuceneJava().getStaticFieldValue('org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilter', 'IGNORE_KEYWORDS');
    }
    static get PRESERVE_ORIGINAL() {
        return getLuceneJava_1.getLuceneJava().getStaticFieldValue('org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilter', 'PRESERVE_ORIGINAL');
    }
    static get SPLIT_ON_CASE_CHANGE() {
        return getLuceneJava_1.getLuceneJava().getStaticFieldValue('org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilter', 'SPLIT_ON_CASE_CHANGE');
    }
    static get SPLIT_ON_NUMERICS() {
        return getLuceneJava_1.getLuceneJava().getStaticFieldValue('org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilter', 'SPLIT_ON_NUMERICS');
    }
    static get STEM_ENGLISH_POSSESSIVE() {
        return getLuceneJava_1.getLuceneJava().getStaticFieldValue('org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilter', 'STEM_ENGLISH_POSSESSIVE');
    }
}
exports.default = WordDelimiterGraphFilter;
// public void doSplit(final String input, String... output) throws Exception {
//   int flags = GENERATE_WORD_PARTS | GENERATE_NUMBER_PARTS | SPLIT_ON_CASE_CHANGE | SPLIT_ON_NUMERICS | STEM_ENGLISH_POSSESSIVE;
//   WordDelimiterFilter wdf = new WordDelimiterFilter(keywordMockTokenizer(input),
//       WordDelimiterIterator.DEFAULT_WORD_DELIM_TABLE, flags, null);
//   assertTokenStreamContents(wdf, output);
// }
//# sourceMappingURL=WordDelimiterGraphFilter.js.map