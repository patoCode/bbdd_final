"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const node_java_rt_1 = require("node-java-rt");
const fs_1 = require("fs");
const luceneVersion = '7.7.2';
function getClassPath() {
    const jars = ['lucene-core', 'lucene-analyzers-common', 'lucene-queryparser'];
    const prefixes = ['./lucene-lib/', 'node_modules/node-lucene/lucene-lib/'];
    let prefix = prefixes.find(p => fs_1.existsSync(`${p}lucene-core-${luceneVersion}.jar`)); //'./lucene-lib/'
    if (prefix) {
        return jars.map(j => `${prefix}${j}-${luceneVersion}.jar`);
    }
    else {
        throw new Error('lucene jar files not found. Looked at ' + prefixes.map(p => `${p}lucene-core-${luceneVersion}.jar`).join(', '));
    }
}
const defaultJavaOptions = {
    asyncOptions: {
        asyncSuffix: 'Async',
        syncSuffix: 'Sync',
        promiseSuffix: 'Promise',
        promisify: require('util').promisify
    },
    classpath: getClassPath(),
    options: []
};
let java;
function getLuceneJava() {
    if (!java) {
        node_java_rt_1.setJavaOptions(defaultJavaOptions);
        java = node_java_rt_1.getJava();
    }
    return java;
}
exports.getLuceneJava = getLuceneJava;
/**
 * This is a mandatory call before using any node-lucene API so node-java is initialized first using lucene
 * .jar in class path and not without them like happens when getJava() is called directly from node-java-rt
 */
function initializeLucene() {
    getLuceneJava();
}
exports.initializeLucene = initializeLucene;
//# sourceMappingURL=getLuceneJava.js.map